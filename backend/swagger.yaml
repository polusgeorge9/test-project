openapi: 3.1.0
info:
  title: Test Project API
  version: 1.0.0
  description: API for managing companies, groups, products, and authentication

servers:
  - url: /api

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
  schemas:
    Company:
      type: object
      required:
        - name
        - shortname
      properties:
        name:
          type: string
        shortname:
          type: string
        active:
          type: boolean
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    Group:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        active:
          type: boolean
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    Product:
      type: object
      required:
        - name
        - purchaseRate
        - saleRate
        - mrp
        - spRate
        - companyId
        - groupId
      properties:
        name:
          type: string
        description:
          type: string
        purchaseRate:
          type: number
        saleRate:
          type: number
        mrp:
          type: number
        spRate:
          type: number
        imagePath:
          type: string
        companyId:
          type: string
        groupId:
          type: string
    User:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        email:
          type: string

security:
  - cookieAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User registered
        "400":
          description: Validation error

  /auth/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful, JWT set in cookie
        "401":
          description: Invalid credentials

  /company:
    get:
      summary: Get all companies
      security:
        - cookieAuth: []
      responses:
        "200":
          description: List of companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"
    post:
      summary: Create a new company
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        "201":
          description: Company created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"

  /company/{id}:
    get:
      summary: Get company by ID
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Company details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "404":
          description: Company not found
    put:
      summary: Update company
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        "200":
          description: Company updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "404":
          description: Company not found
    delete:
      summary: Delete company
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Company deleted
        "404":
          description: Company not found

  /group:
    get:
      summary: Get all groups
      security:
        - cookieAuth: []
      responses:
        "200":
          description: List of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Group"
    post:
      summary: Create a new group
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      responses:
        "201":
          description: Group created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"

  /group/{id}:
    get:
      summary: Get group by ID
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Group details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        "404":
          description: Group not found
    put:
      summary: Update group
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      responses:
        "200":
          description: Group updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        "404":
          description: Group not found
    delete:
      summary: Delete group
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Group deleted
        "404":
          description: Group not found

  /product:
    get:
      summary: Get all products
      security:
        - cookieAuth: []
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      summary: Create a new product (with image upload)
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                purchaseRate:
                  type: number
                saleRate:
                  type: number
                mrp:
                  type: number
                spRate:
                  type: number
                companyId:
                  type: string
                groupId:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        "201":
          description: Product created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

  /product/{id}:
    get:
      summary: Get product by ID
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
    put:
      summary: Update product (with optional image upload)
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                purchaseRate:
                  type: number
                saleRate:
                  type: number
                mrp:
                  type: number
                spRate:
                  type: number
                companyId:
                  type: string
                groupId:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: Product updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
    delete:
      summary: Delete product
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product deleted
        "404":
          description: Product not found
